//Express Server:

//SETUP:
const express = require("express");
const app = express();
const PORT = 8080; // default port 8080

//this code sets ejs as the template engine
app.set("view engine", "ejs");

//----------------------------------------------------
//this object stores our URL values
const urlDatabase = {
  b2xVn2: "http://www.lighthouselabs.ca",
  "9sm5xK": "http://www.google.com",
};

//------------------------------------------------------
//these app.get requests connect us to corresponding ejs template files
app.get("/urls", (req, res) => {
  const templateVars = { urls: urlDatabase };
  res.render("urls_index", templateVars);
});

// -if a client makes a request at this specific path with there own value for (:shortURL)
//  that value will be stored in a var called shortURL and be used in the template vars object
//  so that it can rendered on our ejs file
app.get("/urls/:shortURL", (req, res) => {
  const shortURL = req.params.shortURL;

  const templateVars = {
    shortURL: shortURL,
    longURL: urlDatabase[shortURL],
  };
  res.render("urls_show", templateVars);
});

//------------------------------------------------------
// -Each of these app.gets are for client requests to specific paths
// -the callback represents what they will get back as a response in the browser
app.get("/", (req, res) => {
  res.send("Hello!");
});

// -return the json value of object urlDatabase
app.get("/urls.json", (req, res) => {
  res.json(urlDatabase);
});

// -if a client creates a route to /hello path then return an html formatted string to the
//  clients browser (via res.send)
app.get("/hello", (req, res) => {
  res.send("<html><body>Hello <b>World</b></body></html>\n");
});

//-------------------------------------------------------
// -starts the server and begins to listen for client requests (routes) on this specified
//  port (see setup code)
// -the console.log generated by the callback is for verification in the terminal that the
//  server is now up and running on the specified port outlined in setup

app.listen(PORT, () => {
  console.log(`Example app listening on port ${PORT}!`);
});
